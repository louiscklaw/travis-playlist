{"version":3,"sources":["webpack:///./src/endpoints/jsons.js","webpack:///./src/components/build_failed_card.js","webpack:///./src/components/list_of_failed_branches_heading.js","webpack:///./src/pages/list_of_failed_branch.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["TRAVIS_USER_REPO","getBranchFailStatistics","fetch","getFailedBuildJson","fetchWithToken","url_in","travis_token","headers","getRepoNameFromBuildsLink","builds_link","splitted","split","error","console","getUserRepoWithToken","travis_token_in","fetchWithTokenReturnJson","url","then","r","json","getUserAllRepoWithToken","fetch_one_page_only","a","all_repos","keep_going","fetch_url","fetch_result","pagination","alert","next","next_href","repositories","log","getTravisApiEndpointBranches","repo_in","repo_name","replace","travisRepoNameToLink","getFailedBranchByRepo","r_json","last_builds","branches","map","branch","last_build","last_builds_with_fail","filter","state","filtered_branches","x","repo_path","build_id","BuildFailedCard","props","content","className","href","target","class","link_to_travis","style","color","padding","link_in","extractBuildNoFromLink","ListOfFailedBranchHeading","num_fails","num_repos","ListOfFailedBranchPage","React","useState","test_json","setTestJson","chunked_repo_name","setChunkedRepoName","setNumRepos","setNumFails","setLiveUserRepo","useContext","GlobalContext","useEffect","resp","resp_json","json_in","subtotal","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","chunkArray","Object","keys","forEach","per_repo","values","reduce","y","title","chunk","$export","$values","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","key","O","i","result","call"],"mappings":"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","file":"component---src-pages-list-of-failed-branch-js-4fd6a5fdbc3285303470.js","sourcesContent":["\nconst FAILED_JSON_URL='/json/build_failed_list.json'\n\nconst BUILD_FAILED_LIST_JSON_URL='https://raw.githubusercontent.com/louiscklaw/travis-playlist/db/build_failed_list.json'\nconst BRANCH_FAIL_STATISTICS_URL='https://raw.githubusercontent.com/louiscklaw/travis-playlist/db/branch_fail_statistics.json'\n\nconst TRAVIS_USER_REPO =`https://api.travis-ci.com/owner/louiscklaw/repos`\n\n\nfunction getBranchFailStatistics(){\n  return fetch(BRANCH_FAIL_STATISTICS_URL)\n}\n\nfunction getFailedBuildJson(){\n  return fetch(BUILD_FAILED_LIST_JSON_URL)\n}\n\nfunction fetchWithToken(url_in, travis_token){\n  return fetch( url_in, {\n    headers: {\n      'Travis-API-Version': 3,\n      'Authorization': travis_token,\n      'Content-Type': 'application/xml'\n    }\n  } )\n}\n\nfunction getRepoNameFromBuildsLink(builds_link){\n  try {\n    var splitted = builds_link.split('/')\n\n  } catch (error) {\n    console.error('findme',builds_link)\n    throw error\n  }\n  return splitted[4]+'/'+splitted[5]\n}\n\n\nfunction getLiveFailedBuildJson(travis_token_in){\n  return fetchWithToken('123', travis_token_in)\n}\n\nfunction getUserRepoWithToken(travis_token_in){\n  return fetchWithToken(TRAVIS_USER_REPO, travis_token_in)\n}\n\nfunction fetchWithTokenReturnJson(url, travis_token_in){\n  return fetchWithToken(url, travis_token_in)\n            .then(r => r.json())\n}\n\nasync function getUserAllRepoWithToken(travis_token_in, fetch_one_page_only){\n  let all_repos = []\n\n  // let fetch_result = await fetchWithToken(TRAVIS_USER_REPO, travis_token_in)\n\n  var keep_going = true\n  var countdown = 100\n  // console.log('fetch_one_page_only',fetch_one_page_only)\n\n  let fetch_url = TRAVIS_USER_REPO\n\n  while ( keep_going ) {\n    // console.log(`fetching ${fetch_url}`)\n    var fetch_result = await fetchWithTokenReturnJson(fetch_url,travis_token_in)\n    var pagination = fetch_result[ '@pagination' ]\n\n    if ( typeof fetch_result['@type'] != 'undefined'){\n      if (fetch_result['@type'] == 'error'){\n        alert('error found on fetching result')\n        alert(travis_token_in)\n        keep_going=false\n      }\n    }\n\n    if (typeof pagination == 'undefined'){\n      keep_going = false\n    }else{\n      keep_going = pagination.next\n      let next_href = pagination.next ? pagination.next[ '@href' ] : null\n      // console.log(next_href)\n      fetch_url = `https://api.travis-ci.com${next_href}`\n\n      all_repos = [\n        ...all_repos,\n        ...fetch_result.repositories\n      ]\n    }\n\n    if (fetch_one_page_only == true) {\n      console.log('fetch_one_page_only is on')\n      break\n    }\n  }\n\n\n\n  return all_repos\n}\n\nfunction travisRepoNameToLink( repo_name ) {\n  try {\n    return repo_name.replace( '/', '%2F' )\n\n  } catch ( error ) {\n    console.log( repo_name )\n    throw error\n  }\n}\n\nfunction filterLogic(json_in){\n  var json_result = json_in\n  var branches  = json_result.branches\n  var last_builds = branches.map(branch => branch.last_build)\n\n  var last_builds_with_fail = last_builds.filter( last_build => last_build.state =='failed')\n  var last_builds_with_cancelled = last_builds.filter( last_build => last_build.state !='passed')\n\n  console.log('findme last_build',last_builds)\n\n  return last_builds_with_fail\n}\n\nfunction translateToBuildsLink(repo_path,build_id){\n  // TODO: handle the '/' to put it inside return\n\n  var builds_id = build_id.replace('build','builds')\n  return `https://travis-ci.com/github/${repo_path}${builds_id}`\n}\n\nfunction getTravisApiEndpointBranches(repo_in){\n  return `https://api.travis-ci.com/repo/github/${travisRepoNameToLink(repo_in)}/branches`\n}\n\nfunction getFailedBranchByRepo(repo_in, travis_token_in){\n  let url = getTravisApiEndpointBranches(repo_in)\n\n  return fetchWithTokenReturnJson(url, travis_token_in)\n    .then(r_json => {\n      return filterLogic(r_json)\n    })\n    .then( filtered_branches => filtered_branches.map(x => translateToBuildsLink(repo_in,x['@href'])))\n}\n\n\nexport {\n  getFailedBuildJson,\n  getBranchFailStatistics,\n\n  getLiveFailedBuildJson,\n  getUserRepoWithToken,\n  getUserAllRepoWithToken,\n  getFailedBranchByRepo,\n  getRepoNameFromBuildsLink\n}","import React from 'react'\nimport {Link} from 'gatsby'\n\nfunction extractBuildNoFromLink(link_in){\n  try {\n    return link_in.split('/')[7]\n  } catch (error) {\n    console.log('at build_failed_card.js', link_in)\n    throw error\n  }\n}\n\nfunction BuildFailedCard(props){\n  let {repo_name, content} = props\n  return(\n    <>\n      <div className=\"card\">\n        <header className=\"card-header\">\n          <p className=\"card-header-title\">\n            <a href={'http://www.github.com/'+repo_name} className=\"button is-white is-small\" target='_blank'>\n            <i class=\"fab fa-github-square fa-2x\"></i>\n              {repo_name.split('/')[1]}\n            </a>\n          </p>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content\">\n            <div className=\"tags\">\n            {\n              content.map( link_to_travis => {\n                return(\n                  <span class=\"tag is-danger\">\n                    <a href={link_to_travis}\n                      style={{color: \"white\", padding: \"3px;\"}}\n                      target=\"_blank\">\n                      <i class=\"fas fa-times\"></i>\n                      {extractBuildNoFromLink(link_to_travis)}\n                    </a>\n                  </span>\n                )\n              })\n            }\n            </div>\n          </div>\n        </div>\n        <footer className=\"card-footer\">\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default BuildFailedCard","import React from 'react'\n\nfunction ListOfFailedBranchHeading(props){\n  let {num_fails, num_repos}= props\n  return(\n    <>\n      <h1 className=\"title is-3\">\n        list of failed branches\n      </h1>\n      <h2 className=\"subtitle is-6\">\n        (number of repos: {num_repos}, number of fails {num_fails})\n      </h2>\n    </>\n  )\n}\n\nexport default ListOfFailedBranchHeading","import React from 'react'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Navbar from '../components/navbar'\nimport BuildFailedCard from '../components/build_failed_card'\nimport ListOfFailedBranchHeading from '../components/list_of_failed_branches_heading'\n\nimport {getFailedBuildJson, getUserRepoWithToken} from '../endpoints/jsons'\n\nimport GlobalContext from '../contexts/global'\nimport TravisTokenForm from '../components/TravisTokenForm'\n\n\nfunction chunkArray(myArray, chunk_size){\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n\n  for (index = 0; index < arrayLength; index += chunk_size) {\n      let myChunk = myArray.slice(index, index+chunk_size);\n      // Do something if you want with the group\n      tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n\n\nfunction countTotalNumberOfFail(json_in){\n  let subtotal = {}\n  Object.keys(json_in).forEach(per_repo => subtotal[per_repo] = json_in[per_repo].length)\n  return Object.values(subtotal).reduce( (x,y) => x+y)\n}\n\nfunction ListOfFailedBranchPage(props){\n  let [test_json, setTestJson] = React.useState([])\n  let [chunked_repo_name, setChunkedRepoName] = React.useState([])\n  let [num_repos, setNumRepos] = React.useState(0)\n  let [num_fails, setNumFails] = React.useState(1)\n\n  // let [live_failed_branch, setLiveFailedBranch] = React.useState()\n  let [live_user_repo, setLiveUserRepo] = React.useState()\n\n  let {travis_token} = React.useContext(GlobalContext)\n\n  React.useEffect(()=>{\n    getFailedBuildJson()\n      .then(resp => resp.json())\n      .then(resp_json => {\n        setTestJson(resp_json)\n        setChunkedRepoName(chunkArray(Object.keys(resp_json), 6))\n        setNumRepos(Object.keys(resp_json).length)\n        setNumFails(countTotalNumberOfFail(resp_json))\n      })\n\n  },[])\n\n  React.useEffect(()=>{\n    if (typeof travis_token != 'undefined'){\n      getUserRepoWithToken(travis_token)\n        .then(r => r.json())\n        .then(r_json => setLiveUserRepo(r_json))\n    }\n  },[travis_token])\n\n  return(\n    <>\n      <Layout>\n        <SEO title=\"travis dashboard\" />\n        <Navbar />\n        <section className=\"section\">\n          <div className=\"container\">\n            {/* {JSON.stringify(live_user_repo)} */}\n            <div className=\"columns is-desktop\">\n              <div className=\"column\">\n                <ListOfFailedBranchHeading num_fails={num_fails} num_repos={num_repos} />\n              </div>\n            </div>\n          </div>\n        </section>\n\n          {chunked_repo_name.map(chunk => {\n            return(\n              <div className=\"columns is-desktop\">\n\n                {chunk.map(repo_name => {\n                  return (\n                    <div className=\"column\">\n                      <BuildFailedCard repo_name={repo_name} content={test_json[repo_name]} />\n                    </div>\n                  )\n                })}\n\n              </div>\n            )\n          })}\n\n\n\n            {/* <div className=\"column\">\n              <BuildFailedCard repo_name={`repo_name`} content={`test_json[repo_name]`} />\n            </div>\n\n          </div> */}\n\n          {/* {Object.keys(test_json).map( repo_name => {\n            return(\n              <BuildFailedCard repo_name={repo_name} content={test_json[repo_name]} />\n            )\n          })} */}\n\n\n      </Layout>\n    </>\n  )\n}\n\nexport default ListOfFailedBranchPage","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}